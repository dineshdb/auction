spring:
  application:
    name: ${APP_NAME}
  jpa:
    hibernate:
      ddl-auto: create
  data:
    jpa:
      repositories:
        enabled: true # Whether to enable JPA repositories.
  datasource:
    url: jdbc:${DB_PROVIDER}://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  devtools:
    livereload:
      enabled: true # Whether to enable a livereload.com-compatible server.   
      
  security:
    user:
      name: user
      password: password 
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
      
server:
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
  http2:
    enabled: true
  port: ${PORT}

management:
  endpoints:
    web:
      cors:
        allow-credentials: true
        allowed-headers: '*' # Comma-separated list of headers to allow in a request. '*' allows all headers.
        allowed-methods: '*' # Comma-separated list of methods to allow. '*' allows all methods. When not set, defaults to GET.
        allowed-origins: localhost # Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.
#        exposed-headers: # Comma-separated list of headers to include in a response.
        max-age: 1800s # How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used.
        
security:
  oauth2:
    client:
      clientId: ${GOOGLE_API_KEY}
      clientSecret: ${GOOGLE_API_SECRET}
      accessTokenUri: https://www.googleapis.com/oauth2/v3/token
      userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
      scope: profile
    resource:
      userInfoUri: https://www.googleapis.com/userinfo/v2/me
      preferTokenInfo: false
